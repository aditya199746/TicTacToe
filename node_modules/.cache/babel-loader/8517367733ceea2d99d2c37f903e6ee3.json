{"ast":null,"code":"var _jsxFileName = \"D:\\\\GeetTrust\\\\tictactoe\\\\tictactoe-26Mar2022\\\\src\\\\Game\\\\Board\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Square from \"./Square/Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Board(props) {\n  _s();\n\n  const {\n    squares,\n    setSquares,\n    seconds,\n    setSeconds\n  } = props; //   const [squares, setSquares] = useState(Array(9).fill(null));\n\n  const [xTurn, setXTurn] = useState(true);\n\n  const calWinner = is_xTurn => {\n    let turnValue = is_xTurn ? \"0\" : \"X\";\n\n    if (squares[0] === turnValue && squares[4] === turnValue && squares[8] === turnValue) {\n      props.getWinner(turnValue);\n      return;\n    }\n\n    if (squares[2] === turnValue && squares[4] === turnValue && squares[6] === turnValue) {\n      props.getWinner(turnValue);\n      return;\n    }\n\n    if (squares[0] === turnValue && squares[3] === turnValue && squares[6] === turnValue) {\n      props.getWinner(turnValue);\n      return;\n    }\n\n    if (squares[1] === turnValue && squares[4] === turnValue && squares[7] === turnValue) {\n      props.getWinner(turnValue);\n      return;\n    }\n\n    if (squares[2] === turnValue && squares[5] === turnValue && squares[8] === turnValue) {\n      props.getWinner(turnValue);\n      return;\n    }\n\n    if (squares[0] === turnValue && squares[1] === turnValue && squares[2] === turnValue) {\n      props.getWinner(turnValue);\n      return;\n    }\n\n    if (squares[3] == turnValue && squares[4] == turnValue && squares[5] == turnValue) {\n      props.getWinner(turnValue);\n      return;\n    }\n\n    if (squares[6] === turnValue && squares[7] === turnValue && squares[8] === turnValue) {\n      props.getWinner(turnValue);\n      return;\n    }\n  };\n\n  useEffect(() => {\n    calWinner(xTurn);\n  }, [squares, xTurn]);\n  useEffect(() => {\n    if (seconds == 0) {\n      setXTurn(turn => !turn);\n    }\n  }, [seconds]);\n\n  const handleClick = i => {\n    if (props.winnerMessage === \"\") {\n      if (squares[i] === null) {\n        setXTurn(turn => !turn);\n        const square = squares.slice();\n\n        if (xTurn || seconds == 0) {\n          square[i] = \"X\";\n          setSeconds(30);\n        } else {\n          square[i] = \"0\";\n          setSeconds(30);\n        }\n\n        setSquares(square);\n      } else {\n        alert(\"Cant update the filled block\");\n      }\n    } else {\n      alert(\"please reset and start fresh\");\n    }\n  };\n\n  const renderSquare = i => {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onClick: () => handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  };\n\n  const status = `Next player: ${xTurn ? \"X\" : \"0\"}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: renderSquare(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Board, \"lUZcfg2ouwhe3shoyvVSPNPj3VQ=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["D:/GeetTrust/tictactoe/tictactoe-26Mar2022/src/Game/Board/Board.js"],"names":["useEffect","useState","Square","Board","props","squares","setSquares","seconds","setSeconds","xTurn","setXTurn","calWinner","is_xTurn","turnValue","getWinner","turn","handleClick","i","winnerMessage","square","slice","alert","renderSquare","status"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Square from \"./Square/Square\";\r\nfunction Board(props) {\r\n  const { squares, setSquares, seconds, setSeconds } = props;\r\n  //   const [squares, setSquares] = useState(Array(9).fill(null));\r\n  const [xTurn, setXTurn] = useState(true);\r\n  const calWinner = (is_xTurn) => {\r\n    let turnValue = is_xTurn ? \"0\" : \"X\";\r\n\r\n    if (\r\n      squares[0] === turnValue &&\r\n      squares[4] === turnValue &&\r\n      squares[8] === turnValue\r\n    ) {\r\n      props.getWinner(turnValue);\r\n      return;\r\n    }\r\n    if (\r\n      squares[2] === turnValue &&\r\n      squares[4] === turnValue &&\r\n      squares[6] === turnValue\r\n    ) {\r\n      props.getWinner(turnValue);\r\n      return;\r\n    }\r\n    if (\r\n      squares[0] === turnValue &&\r\n      squares[3] === turnValue &&\r\n      squares[6] === turnValue\r\n    ) {\r\n      props.getWinner(turnValue);\r\n      return;\r\n    }\r\n    if (\r\n      squares[1] === turnValue &&\r\n      squares[4] === turnValue &&\r\n      squares[7] === turnValue\r\n    ) {\r\n      props.getWinner(turnValue);\r\n      return;\r\n    }\r\n    if (\r\n      squares[2] === turnValue &&\r\n      squares[5] === turnValue &&\r\n      squares[8] === turnValue\r\n    ) {\r\n      props.getWinner(turnValue);\r\n      return;\r\n    }\r\n    if (\r\n      squares[0] === turnValue &&\r\n      squares[1] === turnValue &&\r\n      squares[2] === turnValue\r\n    ) {\r\n      props.getWinner(turnValue);\r\n      return;\r\n    }\r\n    if (\r\n      squares[3] == turnValue &&\r\n      squares[4] == turnValue &&\r\n      squares[5] == turnValue\r\n    ) {\r\n      props.getWinner(turnValue);\r\n      return;\r\n    }\r\n    if (\r\n      squares[6] === turnValue &&\r\n      squares[7] === turnValue &&\r\n      squares[8] === turnValue\r\n    ) {\r\n      props.getWinner(turnValue);\r\n      return;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    calWinner(xTurn);\r\n  }, [squares, xTurn]);\r\n  useEffect(() => {\r\n    if (seconds == 0) {\r\n      setXTurn((turn) => !turn);\r\n    }\r\n  }, [seconds]);\r\n  const handleClick = (i) => {\r\n    if (props.winnerMessage === \"\") {\r\n      if (squares[i] === null) {\r\n        setXTurn((turn) => !turn);\r\n        const square = squares.slice();\r\n        if (xTurn || seconds == 0) {\r\n          square[i] = \"X\";\r\n          setSeconds(30);\r\n        } else {\r\n          square[i] = \"0\";\r\n          setSeconds(30);\r\n        }\r\n        setSquares(square);\r\n      } else {\r\n        alert(\"Cant update the filled block\");\r\n      }\r\n    } else {\r\n      alert(\"please reset and start fresh\");\r\n    }\r\n  };\r\n  const renderSquare = (i) => {\r\n    return <Square value={squares[i]} onClick={() => handleClick(i)} />;\r\n  };\r\n  const status = `Next player: ${xTurn ? \"X\" : \"0\"}`;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"status\">{status}</div>\r\n      <tr>\r\n        <td>{renderSquare(0)}</td>\r\n        <td>{renderSquare(1)}</td>\r\n        <td>{renderSquare(2)}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>{renderSquare(3)}</td>\r\n        <td>{renderSquare(4)}</td>\r\n        <td>{renderSquare(5)}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>{renderSquare(6)}</td>\r\n        <td>{renderSquare(7)}</td>\r\n        <td>{renderSquare(8)}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}