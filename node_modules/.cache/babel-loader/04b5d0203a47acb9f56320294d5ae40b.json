{"ast":null,"code":"import _slicedToArray from\"D:/GeetTrust/tictactoe/tictactoe-26Mar2022/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import './Game.css'\nimport Board from\"./Board/Board\";import Timer from\"./Timer\";import{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Game(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),winnerMessage=_useState2[0],setWinnerMessage=_useState2[1];var _useState3=useState(Array(9).fill(null)),_useState4=_slicedToArray(_useState3,2),squares=_useState4[0],setSquares=_useState4[1];var _useState5=useState(30),_useState6=_slicedToArray(_useState5,2),seconds=_useState6[0],setSeconds=_useState6[1];var getWinner=function getWinner(winner){if(winner){setWinnerMessage(\"The Winner is \".concat(winner));}};var handleRest=function handleRest(){var newarr=squares.map(function(s){return s=null;});setSquares(newarr);setWinnerMessage(\"\");};console.log(TimeRanges);return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(Timer,{setSeconds:setSeconds,seconds:seconds,winnerMessage:winnerMessage}),/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:/*#__PURE__*/_jsx(Board,{getWinner:getWinner,winnerMessage:winnerMessage,squares:squares,setSquares:setSquares,setSeconds:setSeconds,seconds:seconds})}),/*#__PURE__*/_jsx(\"div\",{className:\"game-info\",children:/*#__PURE__*/_jsx(\"div\",{children:winnerMessage})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleRest();},children:\"reset\"})]});}export default Game;","map":{"version":3,"sources":["D:/GeetTrust/tictactoe/tictactoe-26Mar2022/src/Game/Game.js"],"names":["Board","Timer","useEffect","useState","Game","props","winnerMessage","setWinnerMessage","Array","fill","squares","setSquares","seconds","setSeconds","getWinner","winner","handleRest","newarr","map","s","console","log","TimeRanges"],"mappings":"gIAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,C,wFACA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CACnB,cAA0CF,QAAQ,CAAC,EAAD,CAAlD,wCAAOG,aAAP,eAAsBC,gBAAtB,eACA,eAA8BJ,QAAQ,CAACK,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAtC,yCAAOC,OAAP,eAAgBC,UAAhB,eACA,eAA8BR,QAAQ,CAAC,EAAD,CAAtC,yCAAOS,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CAC5B,GAAIA,MAAJ,CAAY,CACVR,gBAAgB,yBAAkBQ,MAAlB,EAAhB,CACD,CACF,CAJD,CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIC,CAAAA,MAAM,CAAGP,OAAO,CAACQ,GAAR,CAAY,SAACC,CAAD,QAAQA,CAAAA,CAAC,CAAG,IAAZ,EAAZ,CAAb,CACAR,UAAU,CAACM,MAAD,CAAV,CACAV,gBAAgB,CAAC,EAAD,CAAhB,CACD,CAJD,CAKAa,OAAO,CAACC,GAAR,CAAYC,UAAZ,EACA,mBACE,aAAK,SAAS,CAAC,MAAf,wBACE,KAAC,KAAD,EACE,UAAU,CAAET,UADd,CAEE,OAAO,CAAED,OAFX,CAGE,aAAa,CAAEN,aAHjB,EADF,cAME,YAAK,SAAS,CAAC,YAAf,uBACE,KAAC,KAAD,EACE,SAAS,CAAEQ,SADb,CAEE,aAAa,CAAER,aAFjB,CAGE,OAAO,CAAEI,OAHX,CAIE,UAAU,CAAEC,UAJd,CAKE,UAAU,CAAEE,UALd,CAME,OAAO,CAAED,OANX,EADF,EANF,cAgBE,YAAK,SAAS,CAAC,WAAf,uBACE,qBAAMN,aAAN,EADF,EAhBF,cAmBE,eAAQ,OAAO,CAAE,yBAAMU,CAAAA,UAAU,EAAhB,EAAjB,mBAnBF,GADF,CAuBD,CACD,cAAeZ,CAAAA,IAAf","sourcesContent":["// import './Game.css'\r\nimport Board from \"./Board/Board\";\r\nimport Timer from \"./Timer\";\r\nimport { useEffect, useState } from \"react\";\r\nfunction Game(props) {\r\n  const [winnerMessage, setWinnerMessage] = useState(\"\");\r\n  const [squares, setSquares] = useState(Array(9).fill(null));\r\n  const [seconds, setSeconds] = useState(30);\r\n\r\n  const getWinner = (winner) => {\r\n    if (winner) {\r\n      setWinnerMessage(`The Winner is ${winner}`);\r\n    }\r\n  };\r\n\r\n  const handleRest = () => {\r\n    let newarr = squares.map((s) => (s = null));\r\n    setSquares(newarr);\r\n    setWinnerMessage(\"\");\r\n  };\r\n  console.log(TimeRanges);\r\n  return (\r\n    <div className=\"game\">\r\n      <Timer\r\n        setSeconds={setSeconds}\r\n        seconds={seconds}\r\n        winnerMessage={winnerMessage}\r\n      />\r\n      <div className=\"game-board\">\r\n        <Board\r\n          getWinner={getWinner}\r\n          winnerMessage={winnerMessage}\r\n          squares={squares}\r\n          setSquares={setSquares}\r\n          setSeconds={setSeconds}\r\n          seconds={seconds}\r\n        />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <div>{winnerMessage}</div>\r\n      </div>\r\n      <button onClick={() => handleRest()}>reset</button>\r\n    </div>\r\n  );\r\n}\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}